trigger:
- master

resources:
  repositories:
  - repository: self

stages:
- stage: dev
  jobs:
  - deployment:
    environment: development
    variables:
      - group: nock-fetch
    pool:
      vmImage: ubuntu-latest
    strategy:
      runOnce:
        deploy:
          steps:
            - checkout: self
            - script: echo "//$(registry)/:_authToken=$(access_token)" > .npmrc
              displayName: create .npmrc
            - task: NodeTool@0
              inputs:
                versionSpec: '10.x'
              displayName: 'Install Node.js'
            - task: Npm@1
              displayName: npm install
              inputs:
                command: install
                customRegistry: useNpmrc
            - task: Npm@1
              displayName: run ci tests
              inputs:
                command: custom
                customRegistry: useNpmrc
                customCommand: run ci
            - task: PublishTestResults@2
              displayName: publish JUnit
              condition: succeededOrFailed()
              inputs:
                testRunner: JUnit
                testResultsFiles: '**/junit.xml'
            - task: PublishCodeCoverageResults@1
              displayName: publish coverage
              inputs:
                codeCoverageTool: 'cobertura'
                summaryFileLocation: 'coverage/cobertura-coverage.xml'
                reportDirectory: './coverage'
            - task: Npm@1
              displayName: publish package
              inputs:
                command: publish
                customRegistry: useNpmrc
                publishPackageMetadata: true
                publishEndpoint: npmjs
            - script: rm .npmrc
              displayName: clean .npmrc
              condition: succeededOrFailed()
